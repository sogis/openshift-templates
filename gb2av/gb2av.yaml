apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${APPNAME}-template
labels:
  template: ${APPNAME}-template
  app: ${APPNAME}
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPNAME}
    labels:
      app: ${APPNAME}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: ${IMAGENAME}:${TAG}
      importPolicy:
        scheduled: ${{IMPORT_POLICY_SCHEDULED}}
      name: ${TAG}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPNAME}
  spec:
    template:
      metadata:
        labels:
          app: ${APPNAME}
          deploymentconfig: ${APPNAME}
      spec:
        containers:
        - name: ${APPNAME}
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: ${ENVIRONMENT_SHORT}
          - name: TZ
            value: Europe/Amsterdam
          envFrom:
          - secretRef: 
              name: ${APPNAME}-aws-secret
          - secretRef:
              name: ${APPNAME}-infogrips-secret
          - secretRef:
              name: ${APPNAME}-db-secret
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1 
    replicas: 1
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPNAME}
        from:
          kind: ImageStreamTag
          name: ${APPNAME}:${TAG}
    selector:
      app: ${APPNAME}
      deploymentconfig: ${APPNAME}
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 150
    revisionHistoryLimit: 10
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPNAME}
    annotations:
      description: http port of application
    labels:
      app: ${APPNAME}
      deploymentconfig: ${APPNAME}
  spec:
    ## Define the ports exposed by the app
    ports:
    - name: "80"
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPNAME}
parameters:
- name: ENVIRONMENT_SHORT
  description: "The short name of the environment the template is processed for (one of dev, test, int, prod)"
  value: test
- name: APPNAME
  description: Name of the App
  required: true
- name: IMAGENAME
  description: Name of the docker image (e.g. sogis/my-image)
  required: true
- name: TAG
  description: The Docker image tag to use (e.g. latest)
  value: latest
- name: IMPORT_POLICY_SCHEDULED
  description: Regularly check for changed image?
  value: 'false'
- name: REPLICA_COUNT
  description: Number of replicas to run
  value: '1'
- name: CPU_REQUEST
  description: The minimum amount of CPU the container is guaranteed.
  required: true
- name: CPU_LIMIT
  description: The maximum amount of CPU the container is allowed to use when running.
  required: true
- name: MEMORY_REQUEST
  description: The minimum amount of memory the container is guaranteed.
  required: true
- name: MEMORY_LIMIT
  description: The maximum amount of memory the container is allowed to use when running.
  required: true
