apiVersion: v1
kind: Template
metadata:
  name: mapcache-template
labels:
  template: mapcache-template
  app: mapcache
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: mapcache
  spec:
    tags:
    - from:
        kind: DockerImage
        name: sogis/docker-mapcache:${TAG}
      importPolicy:
        scheduled: ${{IMPORT_POLICY_SCHEDULED}}
      name: ${TAG}
    - from:
        kind: DockerImage
        name: sogis/docker-mapcache:${TAG}
      importPolicy:
        scheduled: ${{IMPORT_POLICY_SCHEDULED}}
      name: seeder
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: mapcache
  spec:
    template:
      metadata:
        labels:
          app: mapcache
          deploymentconfig: mapcache
      spec:
        containers:
        - name: mapcache
          env:
          - name: ENVIRONMENT
            value: ${ENVIRONMENT}
          readinessProbe:
            httpGet:
              path: mapcache/wmts/1.0.0/WMTSCapabilities.xml
              port: 8080
            initialDelaySeconds: 2
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: mapcache/wmts/1.0.0/WMTSCapabilities.xml
              port: 8080
            initialDelaySeconds: 2
            timeoutSeconds: 1
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          volumeMounts:
          - name: tiles
            mountPath: /tiles
        volumes:
        - name: tiles
          persistentVolumeClaim:
            claimName: ${TILES_PVC_NAME}
    replicas: ${{REPLICA_COUNT}}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - mapcache
        from:
          kind: ImageStreamTag
          name: mapcache:${TAG}
    selector:
      app: mapcache
      deploymentconfig: mapcache
    strategy:
      type: Rolling
    revisionHistoryLimit: 10
- apiVersion: v1
  kind: Service
  metadata:
    name: mapcache
  spec:
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: mapcache
      deploymentconfig: mapcache
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: mapcache
  spec:
    host: ${HOSTNAME}
    port:
      targetPort: 80-tcp
    to:
      kind: Service
      name: mapcache
parameters:
- name: TAG
  description: "The Docker image tag to use (e.g. latest)"
  value: latest
- name: IMPORT_POLICY_SCHEDULED
  description: "Regularly check for changed image?"
  value: "false"
- name: REPLICA_COUNT
  description: "Number of replicas to run"
  value: "1"
- name: ENVIRONMENT
  description: "The name of the environment (test, production)"
- name: TILES_PVC_NAME
  description: "The name of the Persisent Volume Claim containing the tiles"
- name: HOSTNAME
  description: "The hostname for the route"
- name: CPU_REQUEST
  description: "The minimum amount of CPU the container is guaranteed."
  value: 250m
- name: CPU_LIMIT
  description: "The maximum amount of CPU the container is allowed to use when running."
  value: "1"
- name: MEMORY_REQUEST
  description: "The minimum amount of memory the container is guaranteed."
  value: 200Mi
- name: MEMORY_LIMIT
  description: "The maximum amount of memory the container is allowed to use when running."
  value: 600Mi
