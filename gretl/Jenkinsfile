// Jenkinsfile adapted for GRETL pod template
def appName = env.JOB_BASE_NAME
def environment = params.NAMESPACE.substring(params.NAMESPACE.lastIndexOf('-') + 1)

pipeline {
    agent any
    stages {
        stage('Checkout branch') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "*/${params.BRANCH}"]],
                    extensions: [
                        [$class: 'CloneOption', noTags: true, shallow: true],
                        [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: appName]]]
                    ],
                    userRemoteConfigs: [[url: env.GIT_URL]]
                ])
            }
        }
        // Update the ImageStream tags (needed for tracking tags like "latest" or "v2.1")
        stage('Update ImageStream tags') {
            steps {
                sh "oc import-image ${appName} --all --confirm -o name -n ${params.NAMESPACE}"
            }
        }
        stage('Apply configuration') {
            steps {
                sh "oc process -f ${appName}/gretl-pod-template.yaml --param-file=${appName}/${appName}_${environment}.params | oc apply -f - -n ${params.NAMESPACE}"
            }
        }
    }
    post {
        always {
            sh "oc status --suggest -n ${params.NAMESPACE}"
            script { currentBuild.description = "${params.NAMESPACE}, branch: ${params.BRANCH}" }
        }
    }
}
