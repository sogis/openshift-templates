apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${APPNAME}-template
labels:
  template: ${APPNAME}-template
  app: ${APPNAME}
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPNAME}
    labels:
      app: ${APPNAME}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: ${IMAGENAME}:${TAG}
      importPolicy:
        scheduled: ${{IMPORT_POLICY_SCHEDULED}}
      name: ${TAG}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPNAME}
  spec:
    replicas: ${{REPLICA_COUNT}}
    revisionHistoryLimit: 3
    selector:
      app: ${APPNAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPNAME}
      spec:
        containers:
        - name: ${APPNAME}
          ## List the necessary envirionment variables below
          env:
          - name: DBURL
            valueFrom:
              configMapKeyRef:
                name: oereb-web-service-configmap
                key: dburl
          - name: DBUSR
            valueFrom:
              secretKeyRef:
                name: oereb-web-service-secret
                key: username
          - name: DBPWD
            valueFrom:
              secretKeyRef:
                name: oereb-web-service-secret
                key: password
          - name: DBSCHEMA
            value: ${DBSCHEMA}
          - name: TZ
            value: ${TZ}
          - name: MININTERSECTION
            value: ${MININTERSECTION}
          - name: TMPDIR
            value: /tmp
          - name: TOMCAT_THREADS_MAX
            value: ${TOMCAT_THREADS_MAX}
          - name: LOG_LEVEL_DB_CONNECTION_POOL
            value: ${LOG_LEVEL_DB_CONNECTION_POOL}
          - name: LOG_LEVEL_DB_CONNECTION
            value: ${LOG_LEVEL_DB_CONNECTION}
          - name: LOG_LEVEL_FRAMEWORK
            value: ${LOG_LEVEL_FRAMEWORK}
          - name: LOG_LEVEL_OEREB
            value: ${LOG_LEVEL_OEREB}
          ## Define HealthChecks. Ideally the timeoutSeconds for the readiness Probe should be shorter than for the liveness Probe or you have different Probes for the checks
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
          ## Define the desired Resources for your container in the paramter file. They should be different in test, int and prod environment
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPNAME}
        from:
          kind: ImageStreamTag
          name: ${APPNAME}:${TAG}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPNAME}
  spec:
    ## Define the ports exposed by the app
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPNAME}
parameters:
- name: APPNAME
  description: Name of the App
  required: true
- name: IMAGENAME
  description: Name of the docker image (e.g. sogis/my-image)
  required: true
- name: TAG
  description: The Docker image tag to use (e.g. latest)
  value: latest
- name: IMPORT_POLICY_SCHEDULED
  description: Regularly check for changed image?
  value: 'false'
- name: REPLICA_COUNT
  description: Number of replicas to run
  value: '1'
- name: CPU_REQUEST
  description: The minimum amount of CPU the container is guaranteed.
  required: true
- name: CPU_LIMIT
  description: The maximum amount of CPU the container is allowed to use when running.
  required: true
- name: MEMORY_REQUEST
  description: The minimum amount of memory the container is guaranteed.
  required: true
- name: MEMORY_LIMIT
  description: The maximum amount of memory the container is allowed to use when running.
  required: true
- name: DBSCHEMA
  description: The name of the database schema containing the data
  value: live
- name: TZ
  description: Print times in the specified time zone
  value: Europe/Zurich
- name: MININTERSECTION
  description: Discard intersection areas/lines smaller than MININTERSECTION map units
  value: '0.5'
- name: TOMCAT_THREADS_MAX
  description: Maximum number of threads that can be created by Tomcat
  value: '200'
- name: LOG_LEVEL_DB_CONNECTION_POOL
  description: The log level of the DB connection pool
  value: info
- name: LOG_LEVEL_DB_CONNECTION
  description: The log level of the JDBC DB connection
  value: info
- name: LOG_LEVEL_FRAMEWORK
  description: The log level of the Spring framework
  value: info
- name: LOG_LEVEL_OEREB
  description: The log level of the OEREB library
  value: info
